pipeline {
    agent any

    /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Global variables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
    environment {
        REGISTRY = 'suarim'                       // e.g. Docker Hub username
        IMAGE    = "${REGISTRY}/jenksdocks"       // full repo name
        TAG      = "${BUILD_NUMBER}"              // Jenkins build number
    }

    stages {

        /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 1. CHECKOUT â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
        stage('Checkout') {
            steps {
                echo '======== executing Checkout ========'
                checkout scm
            }
            post {
                always  { echo '======== Checkout completed ========' }
                success { echo '======== Checkout executed successfully ========' }
                failure { echo '======== Checkout execution failed ========' }
            }
        }

        /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 2. BUILD IMAGE â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
        stage('Build') {
            steps {
                /* Triple-single-quoted Groovy string â†’ shell script.
                   $IMAGE and $TAG expand inside the *shell*, not in Groovy. */
                sh '''
                    set -e               # fail fast on any error
                    echo "Building image $IMAGE:$TAG"
                    docker build -t $IMAGE:$TAG .
                '''
            }
            post {
                always  { echo '======== Build completed ========' }
                success { echo '======== Build executed successfully ========' }
                failure { echo '======== Build execution failed ========' }
            }
        }

        /* â”€â”€â”€â”€â”€â”€â”€ add Push / Deploy stages later â”€â”€â”€â”€â”€â”€â”€ */
    }

    /* Optional global cleanup */
    post {
        always {
            echo 'ðŸ§¹  Cleaning workspace'
            cleanWs()
        }
    }
}
