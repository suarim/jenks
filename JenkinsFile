pipeline {
    agent any

    /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ Global variables â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
    environment {
        REGISTRY = 'suarim'                       // e.g. Docker Hub username
        IMAGE    = "${env.REGISTRY}/jenksdocks"   // full repo name
        TAG      = "v${env.BUILD_NUMBER}"          // Jenkins build number
    }

    stages {

        /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ 1. CHECKOUT â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
        stage('Checkout') {
            steps {
                echo '======== executing Checkout ========'
                checkout scm
            }
            post {
                always  { echo '======== Checkout completed ========' }
                success { echo '======== Checkout executed successfully ========' }
                failure { echo '======== Checkout execution failed ========' }
            }
        }
        stage('Build') {
            steps {
                echo '======== executing Build Stage ========'
                sh 'docker build -t ${IMAGE}:${TAG} .'
            }
            post {
                always  { echo '======== Build Stage completed ========' }
                success { echo '======== Build Stage executed successfully ========' }
                failure { echo '======== Build Stage execution failed ========' }
            }
        }
        stage('Push'){
            steps{
                withCredentials([usernamePassword(credentialsId:'docker_pass', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    echo '======== executing Push Stage ========'
                    sh "echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin"
                    sh "docker push ${IMAGE}:${TAG}"
                }
            }
            post {
                always  { echo '======== Push Stage completed ========' }
                success { echo '======== Push Stage executed successfully ========' }
                failure { echo '======== Push Stage execution failed ========' }
            }
        }
        stage('Deploy'){
            steps{
                withCredentials([file(credentialsId;'jenks', variable: 'ENV_FILE')]) {
                echo '======== executing Deploy Stage ========'
                sh 'docker rm run  --env-file ./ENV_FILE -d -p 10000:10000  ${IMAGE}:${TAG}'
            }
        }
        }
      
    }

 
    post {
        always {
            echo 'ðŸ§¹  Cleaning workspace'
            cleanWs()
        }
    }
}
